"""
1)	Создать программно файл в текстовом формате,
записать в него построчно данные, вводимые пользователем.
Об окончании ввода данных свидетельствует пустая строка.
"""


def write_file():
    """Функция для построчной записи данных в файл, вводимых пользователем."""
    str_list = input("Введите строку для записи в файл: ")
    if len(str_list) > 0:
        with open("out_file.txt", "a", encoding='utf-8') as out_f:
            out_f.write(str_list + "\n")
        print("Записано.")
        return write_file()

    return None


write_file()

"""
2)	Создать текстовый файл (не программно), сохранить в нем несколько строк,
выполнить подсчет количества строк, количества слов в каждой строке.
"""

with open("from_file.txt", "r", encoding='utf-8') as from_f:
    list_from_file = from_f.readlines()

print("Количество строк: ", len(list_from_file))

i = 0
while i < len(list_from_file):
    print(f"Количество слов в строке {i + 1}: {len(list_from_file[i].split())}")
    i = i + 1

"""
3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников
и величину их окладов (не менее 10 строк). Определить, кто из сотрудников имеет оклад менее 20 тыс.,
вывести фамилии этих сотрудников. Выполнить подсчет средней величины дохода сотрудников.
Пример файла:
Иванов 23543.12
Петров 13749.32
Создал файл с именем: from_file.txt

Содержимое: 

Иванов 23543.12
Петров 13749.32
Боширов 20749.42
Каспарайтис 13149.22
Фетисов 13719.12
Тихонов 23749.7
Овечкин 9749.5
Ковальчук 21729.4
Третьяк 10743.1
Михайлов 13741.3

"""

with open("from_file.txt", "r", encoding='utf-8') as from_f:
    list_from_file = from_f.readlines()

print("Сотрудники, имеющие оклад менее 20 тыс.:")
sum_salary = 0
i = 0
while i < len(list_from_file):
    sum_salary += float(list_from_file[i].split()[1])
    if float(list_from_file[i].split()[1]) < 20000:
        print(list_from_file[i].split()[0])
    i = i + 1

print("Средняя величина дохода сотрудников: ", sum_salary / len(list_from_file))

"""
4)	Создать (не программно) текстовый файл со следующим содержимым:
One — 1
Two — 2
Three — 3
Four — 4
Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
При этом английские числительные должны заменяться на русские.
Новый блок строк должен записываться в новый текстовый файл.

создан новый файл с указанным содержимым: num_file.txt
"""

with open("num_file.txt", "r", encoding='utf-8') as from_f:
    list_from_file = from_f.readlines()

rus_num = ['Один', 'Два', 'Три', 'Четыре']

i = 0
while i < len(list_from_file):
    list_from_file[i] = list_from_file[i].replace(list_from_file[i].split()[0], rus_num[i])
    i = i + 1

with open("new_file.txt", "w", encoding='utf-8') as to_f:
    to_f.writelines(list_from_file)

"""
5)	Создать (программно) текстовый файл, записать в него программно набор чисел,
 разделенных пробелами. Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.
"""

with open("new_file.txt", "w", encoding='utf-8') as to_f:
    to_f.write("1 2 3 4 5 6 7 8 9")

with open("new_file.txt", "r", encoding='utf-8') as from_f:
    sum_from_f = map(float, from_f.read().split())

print(sum(sum_from_f))

"""
6)	Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие лекционных,
практических и лабораторных занятий по этому предмету и их количество.
Важно, чтобы для каждого предмета не обязательно были все типы занятий.
Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести словарь на экран.

Примеры строк файла: Информатика:   100(л)   50(пр)   20(лаб).
                                        Физика:   30(л)   —   10(лаб)
                                        Физкультура:   —   30(пр)   —
Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

Создал текстовый файл lect.txt со следующим содержимым:

Информатика:    100(л)   50(пр)   20(лаб)
Физика:         30(л)   —         10(лаб)
Физкультура:      —     30(пр)      —
Алгебра:        40(л)   20(пр)      —
Геометрия:      30(л)   20(пр)      —
Химия:          20(л)   10(пр)    10(лаб)
Рисование:      30(л)   20(пр)      —
Литература:     30(л)   —           —
География:      30(л)   —           —
"""

with open("lect.txt", "r", encoding='utf-8') as to_f:
    list_from_file = to_f.readlines()


def func_calc_lect(lect_1, lect_2, lect_3):
    """Функция, принимающая в качестве агрументов строковые значения из файла для подсчета общего количества
    занятий по текущему предмету. Данная функция используется в цикле формирования словаря."""
    if lect_1 != '—':
        lect_1 = int(lect_1[:-3])
    else:
        lect_1 = 0

    if lect_2 != '—':
        lect_2 = int(lect_2[:-4])
    else:
        lect_2 = 0

    if lect_3 != '—':
        lect_3 = int(lect_3[:-5])
    else:
        lect_3 = 0

    return lect_1 + lect_2 + lect_3


dict_lect = {}
i = 0
while i < len(list_from_file):
    dict_lect[list_from_file[i].split()[0]] = func_calc_lect(list_from_file[i].split()[1],
                                                             list_from_file[i].split()[2],
                                                             list_from_file[i].split()[3])
    i = i + 1

print(dict_lect)

"""
7)	Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка должна содержать
данные о фирме: название, форма собственности, выручка, издержки.
Пример строки файла: firm_1   ООО   10000   5000.
Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
Если фирма получила убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
Подсказка: использовать менеджер контекста.

Создал файл firms.txt со следующим содержимым:
firm_1   ООО   10000   5000
firm_2   ООО   11000   7000
firm_3   ОО1   1000    2000
firm_4   ОО2   20000   30000
firm_5   ООО   15000   7000
firm_6   ОО2   60000   70000
firm_7   ООО   30000   15000
"""

import json

with open("firms.txt", "r", encoding='utf-8') as from_f:
    list_from_file = from_f.readlines()

"""в нижеследующем цикле я решил использовать промежуточные переменные a и b,
    что бы избежать совершения несколько одинаковых операций .split() и 
    сделать код более компактным и читаемым
"""
sum_profit = 0
count_profit = 0
firms_dict = {}
i = 0
while i < len(list_from_file):
    a, b = float(list_from_file[i].split()[2]), float(list_from_file[i].split()[3])  # промежуточные переменные
    firms_dict[list_from_file[i].split()[0]] = a - b  # запись в словарь фирмы и ее прибыли/убытки
    if a - b > 0:
        sum_profit += a - b  # сложение прыбыли для вычитания среднего значения
        count_profit = count_profit + 1  # подсчет кол-ва фирм с прибылью для среднего значения
    i = i + 1

json_obj = [firms_dict, {"average_profit": sum_profit / count_profit}]

with open("firms.json", "w") as write_f:
    json.dump(json_obj, write_f)
